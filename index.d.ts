/* auto-generated by NAPI-RS */
/* eslint-disable */
export declare class WeRustHandler {
  /** Connect to lair keystore */
  static connect(keystoreUrl: string, passphrase: string): Promise<WeRustHandler>
  /** Sign a zome call */
  signZomeCall(payload: Array<number>, pubKey: Array<number>): Promise<Array<number>>
}

export interface HappAndUiHashes {
  happSha256: string
  webhappSha256?: string
  uiSha256?: string
}

export declare function happBytesWithCustomProperties(happPath: string, properties: Record<string, string | undefined | null>): Promise<Array<number>>

/**
 * Saves a happ or a webhapp file. If a uis_dir is specified and it is a webhapp,
 * then the UI will be stored in [uis_dir]/[sha 256 of UI]/assets. If no uis_dir
 * is specified, only the happ file will be stored.
 */
export declare function saveHappOrWebhapp(happOrWebHappPath: string, happsDir: string, uisDir?: string | undefined | null): Promise<StoredHappPathAndHashes>

export interface StoredHappPathAndHashes {
  happPath: string
  happSha256: string
  webhappSha256?: string
  uiSha256?: string
}

/**
 * Checks that the happ or webhapp is of the correct format
 * WARNING: The decoding and encoding of the happ bytes seems to affect happ's sha256 hash.
 */
export declare function validateHappOrWebhapp(happOrWebhappBytes: Array<number>): Promise<HappAndUiHashes>
